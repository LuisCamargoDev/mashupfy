{"ast":null,"code":"var _jsxFileName = \"/Users/LuisCamargo/Desktop/Development/mashupfy/frontend/src/components/Product/index.js\";\nimport React, { Component } from \"react\"; //import { Link } from \"react-router-dom\";\n\nimport { Col, Row, Button, Container } from \"reactstrap\";\nexport default class Product extends Component {\n  constructor() {\n    super();\n    this.state = {\n      productArr: \"\"\n    };\n    this.setValueCart = this.setValueCart.bind(this);\n  }\n\n  setValueCart(e, valor, porcentagem) {\n    e.preventDefault();\n    let actual = localStorage.getItem(\"cartValue\");\n\n    if (actual == null || actual == \"null\") {\n      actual = 0;\n    } else {\n      actual = parseInt(actual);\n    }\n\n    let temp = valor * porcentagem / 100;\n    let total = temp + actual;\n    localStorage.setItem(\"cartValue\", total);\n  } // Send product-value, to localstorage\n\n\n  async componentDidMount() {\n    let saldo = 0;\n    localStorage.setItem(\"userBalance\", saldo);\n    const token = localStorage.getItem(\"token\");\n    /* Retorna os produtos existentes */\n\n    const products = await fetch(\"http://localhost:3333/product\", {\n      headers: new Headers({\n        Authorization: \"Bearer \".concat(token)\n      })\n    }).then(response => {\n      return response.json();\n    }).catch(err => console.log(err));\n    this.setState({\n      productArr: products\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      className: \"Product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"title_m\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Produtos mais vendidos\")), React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.productArr.data ? this.state.productArr.data.map(product => React.createElement(Col, {\n      xs: \"2\",\n      className: \"card\",\n      key: product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bodyProduct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: product.file_img,\n      className: \"logoProfile\",\n      alt: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), product.nome), React.createElement(\"div\", {\n      className: \"bodyProduct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"R$ \", product.valor), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, product.porcentagem, \"% \"), \" de volta\")), React.createElement(Button, {\n      color: \"success\",\n      onClick: e => this.setValueCart(e, product.valor, product.porcentagem),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Comprar\"))) : 'Vazio')));\n  }\n\n}","map":{"version":3,"sources":["/Users/LuisCamargo/Desktop/Development/mashupfy/frontend/src/components/Product/index.js"],"names":["React","Component","Col","Row","Button","Container","Product","constructor","state","productArr","setValueCart","bind","e","valor","porcentagem","preventDefault","actual","localStorage","getItem","parseInt","temp","total","setItem","componentDidMount","saldo","token","products","fetch","headers","Headers","Authorization","then","response","json","catch","err","console","log","setState","render","data","map","product","id","file_img","nome"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import { Link } from \"react-router-dom\";\nimport { Col, Row, Button, Container } from \"reactstrap\";\n\nexport default class Product extends Component {\n    constructor() {\n        super();\n        this.state = {\n          productArr: \"\",        \n        };\n        this.setValueCart = this.setValueCart.bind(this);\n      }\n    \n  setValueCart(e, valor,porcentagem){\n    e.preventDefault();\n    let actual = localStorage.getItem(\"cartValue\");\n    if (actual == null || actual == \"null\"){\n      actual = 0;\n    } else {\n      actual = parseInt(actual);\n    }           \n    let temp = (valor * porcentagem)/100;              \n    let total = temp+actual;      \n    localStorage.setItem(\"cartValue\", total);\n      }\n\n    // Send product-value, to localstorage\n      async componentDidMount(){\n        let saldo = 0;\n        localStorage.setItem(\"userBalance\", saldo);\n        const token = localStorage.getItem(\"token\");       \n\n        /* Retorna os produtos existentes */\n        const products = await fetch(\"http://localhost:3333/product\", {\n          headers: new Headers({ Authorization: `Bearer ${token}` })\n        })\n          .then(response => {\n            return response.json();\n          })\n          .catch(err => console.log(err));\n\n    \n        this.setState({\n            productArr: products,\n        });\n        \n      }\n    render(){\n        return(\n            <Container className=\"Product\">\n                <div className=\"header\">\n                    <h3 className=\"title_m\">Produtos mais vendidos</h3>\n                </div>\n                <div className=\"body\">\n                    <Row>\n                        {this.state.productArr.data?\n                                this.state.productArr.data.map(product => (\n                                    <Col xs=\"2\" className=\"card\" key={product.id}>\n                                        <div className=\"bodyProduct\">\n                                             <img src={product.file_img} className=\"logoProfile\" alt=\"Logo\" />\n                                             {product.nome}\n                                        </div>\n                                        <div className=\"bodyProduct\">     \n\n                                        <span>R$ {product.valor}</span>                           \n                                            {/* <img src={amerProd} className=\"prod\" alt=\"Logo\" /> */}                                            \n                                            <h4><span className=\"green\">{product.porcentagem}% </span> de volta</h4>\n                                        </div>  \n                                        <Button color=\"success\" onClick={(e) => this.setValueCart(e,product.valor,product.porcentagem)}>Comprar</Button>               \n                                    </Col>\n                                ))                            \n                        :\n                        'Vazio'\n                        }                     \n                    </Row>\n                </div>  \n            </Container> \n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}